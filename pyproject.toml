[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.poetry]
authors = ["Joakim Sorensen <hi@ludeeus.dev>"]
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
exclude = ['**/__pycache__']
include = ["pyhaversion", "pyhaversion.*", "LICENCE.md"]
license = "MIT"
keywords = ["homeassistant", "version", "update"]
description = "Get the latest Home Assistant version from various sources."
maintainers = ["Joakim Sorensen <hi@ludeeus.dev>"]
name = "pyhaversion"
readme = "README.md"
repository = "https://github.com/ludeeus/pyhaversion"
version = "0"

[tool.mypy]
platform = "linux"
python_version = "3.12"
strict = true

# show error messages from unrelated files
follow_imports = "normal"

# suppress errors about unsatisfied imports
ignore_missing_imports = true

# be strict
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
no_implicit_reexport = true
strict_optional = true
warn_incomplete_stub = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true

[tool.poetry.dependencies]
python = "^3.12"
aiohttp = "^3.6"
awesomeversion = ">21"

[tool.poetry.dev-dependencies]
aresponses = "^3"
awesomeversion = ">21"
ruff = "0.6.4"
mypy = "1.11.2"
pre-commit = "3.8.0"
pre-commit-hooks = "4.6.0"
pytest = "8.3.3"
pytest-asyncio = "0.24.0"
pytest-cov = "5.0.0"

[tool.coverage.run]
source = ["pyhaversion"]

[tool.coverage.report]
skip_covered = false
fail_under = 100
exclude_lines = [
  "^\\s*if (False|TYPE_CHECKING):"
]
omit = [
    "setup.py",
    "tests/*",
    "example.py"
]

[tool.pytest]
asyncio_mode = "strict"
adopts = ["-rxf", "-x", "-v", "-l"]

[tool.ruff]
line-length = 100

[tool.ruff.lint]
ignore = [
  "ANN101",
  "ANN401",
  "D203",
  "D212",
  "EM101",
  "EM102",
  "N818",
  "PLR0913",
  "PLR2004",
  "TRY003",
]

select = ["ALL"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.isort]
known-first-party = ["pytraccar"]

[tool.ruff.lint.mccabe]
max-complexity = 15
